-- user table
create table if not exists "auth"."users" (
    "id" bigint generated by default as identity primary key,
    "email" varchar(255) unique not null,
    "password_hash" varchar(255) not null,
    "refresh_token" text,
    "created_at" timestamptz default now(),
    "updated_at" timestamptz default now()
);
-- 
create or replace function "auth"."set_updated_at_timestamp"() returns trigger as $$ begin new.updated_at = now();
return new;
end;
$$ language plpgsql;
--
drop trigger if exists "trg__set_updated_at_timestamp" on "auth"."users";
create or replace trigger "trg__set_updated_at_timestamp" before
update on "auth"."users" for each row execute function "auth"."set_updated_at_timestamp"();